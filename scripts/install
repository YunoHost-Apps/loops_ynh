#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

ynh_app_setting_set_default --key=email --value=$(ynh_user_get_info --username=$admin --key=mail)
ynh_app_setting_set_default --key=fullname --value=$(ynh_user_get_info --username=$admin --key=fullname)
ynh_app_setting_set_default --key=username --value=$(ynh_user_get_info --username=$admin --key=username)
ynh_app_setting_set_default --key=php_upload_max_filesize --value=100M
ynh_app_setting_set_default --key=php_post_max_size --value=100M
ynh_app_setting_set_default --key=php_max_file_uploads --value=100M
ynh_app_setting_set_default --key=php_max_execution_time --value=300
ynh_app_setting_set_default --key=php_memory_limit --value=512M
if [ $s3_path_style -eq 1 ]
then
    s3_path_style_string="true"
else
    s3_path_style_string="false"
fi
ynh_app_setting_set_default --key=s3_path_style_string --value=$s3_path_style_string

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir"

#=================================================
# COMPOSER
#=================================================
ynh_script_progression "Pulling in external libraries with Composer..."

ynh_composer_exec install --no-dev --optimize-autoloader

#=================================================
# INSTALL NODE DEPENDENCIES
#=================================================
ynh_script_progression "Install Node dependencies..."

pushd "$install_dir"
    ynh_hide_warnings ynh_exec_as_app npm install
    ynh_hide_warnings ynh_exec_as_app npm run build
popd

chown -Rv $app:www-data $install_dir

#=================================================
# APP INITIAL CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration files..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

chmod 600 "$install_dir/.env"

#=================================================
# ENVIRONMENT CONFIGURATION
#=================================================
ynh_script_progression "Adding environment configurations related to $app..."

artisan="ynh_exec_as_app php$php_version artisan"

pushd "$install_dir"
    $artisan key:generate
    $artisan storage:link
popd

#=================================================
# DATABASE SETUP
#=================================================
ynh_script_progression "Tweak database character set..."

ynh_mysql_db_shell <<< "ALTER DATABASE $db_name CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

ynh_script_progression "Run migrations..."

pushd "$install_dir"
    $artisan migrate --force
popd

ynh_script_progression "Create admin account..."

pushd "$install_dir"
    $artisan create-admin-account --name="$fullname" --username="$username" --email="$email" --password="$password" --force
popd

#=================================================
# QUEUE CONFIGURATION
#=================================================
ynh_script_progression "Queue configuration..."

# Publish Horizon Configuration
pushd "$install_dir"
    $artisan vendor:publish --provider="Laravel\Horizon\HorizonServiceProvider"
popd

# Configure Horizon
# FIXME: We need to figure out horizon.php should be edited
# https://github.com/joinloops/loops-server/blob/main/INSTALLATION.md#2-configure-horizon

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a PHP-FPM config (with conf/extra_php-fpm.conf being appended to it)
ynh_config_add_phpfpm

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add "$app" --description="Federated short video sharing" --log="/var/log/$app/$app.log"

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
# ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

# Set permissions
chown -R $app:www-data $install_dir
chmod -R 775 $install_dir/storage
chmod -R 775 $install_dir/bootstrap/cache

ynh_config_add --template="cron" --destination="/etc/cron.d/$app"

pushd "$install_dir"
    $artisan config:cache
    $artisan route:cache
    $artisan view:cache
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service="$app" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
